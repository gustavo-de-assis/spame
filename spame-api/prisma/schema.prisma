generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id          Int       @id(map: "Address_pk") @default(autoincrement())
  street      String    @db.VarChar
  houseNumber String    @db.VarChar
  complement  String    @db.VarChar
  district    String    @db.VarChar
  city        String    @db.VarChar
  state       String    @db.VarChar
  Patient     Patient[]
}

model Administrator {
  id        Int       @id(map: "Administrator_pk") @default(autoincrement())
  patientId Int
  password  String    @db.VarChar
  Patient   Patient   @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Administrator_fk0")
  Employee  Employee? @relation(fields: [patientId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "Administrator_fk1")
}

model Appointment {
  id             Int             @id(map: "Appointment_pk") @default(autoincrement())
  scheduleTo     DateTime        @db.Date
  patientId      Int
  doctorId       Int
  recepcionistId Int
  diagnosis      String
  createdAt      DateTime        @default(dbgenerated("'2023-11-10 19:15:10.178685'::timestamp without time zone")) @db.Timestamp(6)
  Patient        Patient         @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Appointment_fk0")
  Doctor         Doctor          @relation(fields: [doctorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Appointment_fk1")
  Recepcionist   Recepcionist    @relation(fields: [recepcionistId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Appointment_fk2")
  MedicalRecord  MedicalRecord[]
}

model Doctor {
  id          Int           @id(map: "Doctor_pk") @default(autoincrement())
  patientId   Int
  crm         String        @unique @db.VarChar
  speciality  String        @db.VarChar
  password    String        @db.VarChar
  Patient     Patient       @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Doctor_fk0")
  Employee    Employee?     @relation(fields: [patientId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "Doctor_fk1")
  Appointment Appointment[]
}

model MedicalRecord {
  id            Int         @id(map: "MedicalRecord_pk") @default(autoincrement())
  patientId     Int
  appointmentId Int
  Patient       Patient     @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MedicalRecord_fk0")
  Appointment   Appointment @relation(fields: [appointmentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MedicalRecord_fk1")
}

model Patient {
  id            Int             @id(map: "Patient_pk") @default(autoincrement())
  name          String          @db.VarChar
  birthdate     DateTime        @db.Date
  gender        String          @db.Char(1)
  cpf           String          @unique @db.VarChar(11)
  rg            String?         @db.VarChar
  mother        String          @db.VarChar
  father        String          @db.VarChar
  email         String          @unique @db.VarChar
  phone         String          @db.VarChar
  createdAt     DateTime        @default(dbgenerated("'2023-11-10 19:14:44.13589'::timestamp without time zone")) @db.Timestamp(6)
  addressId     Int
  Administrator Administrator[]
  Appointment   Appointment[]
  Doctor        Doctor[]
  MedicalRecord MedicalRecord[]
  Address       Address         @relation(fields: [addressId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Patient_fk0")
  Recepcionist  Recepcionist[]
  Session       Session[]
  Employee      Employee[]
}

model Recepcionist {
  id          Int           @id(map: "Recepcionist_pk") @default(autoincrement())
  patientId   Int
  password    String        @db.VarChar
  Patient     Patient       @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Recepcionist_fk0")
  Employee    Employee?     @relation(fields: [patientId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "Recepcionist_fk1")
  Appointment Appointment[]
}

model Role {
  id          Int        @id(map: "Role_pk") @default(autoincrement())
  name        String     @unique @db.VarChar
  accessLevel Int        @unique
  Employee    Employee[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      Patient  @relation(fields: [userId], references: [id], onDelete: NoAction)
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id            Int             @id @default(autoincrement())
  userId        Int             @unique
  Patient       Patient         @relation(fields: [userId], references: [id], onDelete: NoAction)
  roleId        Int
  Role          Role            @relation(fields: [roleId], references: [id], onDelete: NoAction)
  startDate     DateTime        @default(now())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  Administrator Administrator[]
  Doctor        Doctor[]
  Recepcionist  Recepcionist[]
}
